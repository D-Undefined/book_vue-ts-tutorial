import{o,c as t,d as i}from"./app.45d82a66.js";const a='{"title":"なぜ composition API を使うのか","description":"","frontmatter":{},"headers":[{"level":2,"title":"なぜ composition API を使うのか","slug":"なぜ-composition-api-を使うのか"}],"relativePath":"guide/1-what-is-composition-api.md","lastUpdated":1631450856005}',e={},r=[i('<h2 id="なぜ-composition-api-を使うのか" tabindex="-1">なぜ composition API を使うのか <a class="header-anchor" href="#なぜ-composition-api-を使うのか" aria-hidden="true">#</a></h2><p>他のフレームワークと比較して Vue は比較的に自由に書いても <strong>ちゃんと</strong> 動いてくれることが入門者向けとして歓迎されてきました。</p><p>しかし、 <strong>ちゃんと</strong> 動くということは、 Vue が裏側で <strong>うまく処理してくれていた</strong> から動いていたのです。</p><p>その弊害は開発規模が大規模になればなるほど、ロジックが複雑になり、様々な問題が見えてくるようになりました。</p><p>そこに、他の js フレームワーク (Angular や React) が TypeScript 対応する中で遅れを取っていた Vue のために Composition API が開発されました。</p><p><a href="https://qiita.com/karamage/items/7721c8cac149d60d4c4a" target="_blank" rel="noopener noreferrer">qiita なぜcomposition API なのか</a></p>',6)];e.render=function(i,a,e,p,n,s){return o(),t("div",null,r)};export{a as __pageData,e as default};
